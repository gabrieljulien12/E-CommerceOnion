// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionPersistance.Context;

#nullable disable

namespace OnionPersistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240530143710_update2")]
    partial class update2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnionDomain.Common.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 157, DateTimeKind.Local).AddTicks(2165),
                            IsDeleted = false,
                            Name = "Asus"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 157, DateTimeKind.Local).AddTicks(2174),
                            IsDeleted = false,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 157, DateTimeKind.Local).AddTicks(2182),
                            IsDeleted = false,
                            Name = "Acer"
                        });
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.Catagory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Catagories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 157, DateTimeKind.Local).AddTicks(7172),
                            IsDeleted = false,
                            Name = "Elektronik",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 157, DateTimeKind.Local).AddTicks(7181),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 157, DateTimeKind.Local).AddTicks(7188),
                            IsDeleted = false,
                            Name = "Bilgisayar",
                            ParentId = 1,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 157, DateTimeKind.Local).AddTicks(7195),
                            IsDeleted = false,
                            Name = "Kazak",
                            ParentId = 1,
                            Priorty = 2
                        });
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatagoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatagoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatagoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 158, DateTimeKind.Local).AddTicks(1441),
                            Description = "RTX4090",
                            IsDeleted = false,
                            Title = "EkranKartı"
                        },
                        new
                        {
                            Id = 2,
                            CatagoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 158, DateTimeKind.Local).AddTicks(1450),
                            Description = "DDR5",
                            IsDeleted = true,
                            Title = "Ram"
                        },
                        new
                        {
                            Id = 3,
                            CatagoryId = 4,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 158, DateTimeKind.Local).AddTicks(1457),
                            Description = "Yün",
                            IsDeleted = false,
                            Title = "Hammadde"
                        });
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 160, DateTimeKind.Local).AddTicks(8487),
                            Desciription = "blablabla",
                            Discount = 15m,
                            IsDeleted = false,
                            Price = 15000m,
                            Tittle = "Asusz9"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 160, DateTimeKind.Local).AddTicks(8499),
                            Desciription = "blablabla",
                            Discount = 15m,
                            IsDeleted = false,
                            Price = 15000m,
                            Tittle = "macbook"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 5, 30, 17, 37, 9, 160, DateTimeKind.Local).AddTicks(8508),
                            Desciription = "blablabla",
                            Discount = 15m,
                            IsDeleted = false,
                            Price = 15000m,
                            Tittle = "aspire"
                        });
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.ProductCatagory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CatagoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CatagoryId");

                    b.HasIndex("CatagoryId");

                    b.ToTable("productCatagories");
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.Detail", b =>
                {
                    b.HasOne("OnionDomain.Common.Entities.Catagory", "Catagory")
                        .WithMany("Details")
                        .HasForeignKey("CatagoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catagory");
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.Product", b =>
                {
                    b.HasOne("OnionDomain.Common.Entities.Brand", "brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("brand");
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.ProductCatagory", b =>
                {
                    b.HasOne("OnionDomain.Common.Entities.Catagory", "Catagory")
                        .WithMany("CatagoryProductis")
                        .HasForeignKey("CatagoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnionDomain.Common.Entities.Product", "Product")
                        .WithMany("CatagoryProductis")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catagory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.Catagory", b =>
                {
                    b.Navigation("CatagoryProductis");

                    b.Navigation("Details");
                });

            modelBuilder.Entity("OnionDomain.Common.Entities.Product", b =>
                {
                    b.Navigation("CatagoryProductis");
                });
#pragma warning restore 612, 618
        }
    }
}
